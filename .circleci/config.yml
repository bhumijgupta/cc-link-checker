# use CircleCI 2.0
version: 2
# A basic unit of work in a run
jobs:
    # runs not using Workflows must have a `build` job as entry point
    lint:
        # directory where steps are run
        working_directory: ~/cc-link-checker
        # run the steps with Docker
        docker:
            # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
            - image: circleci/python:3.6.4
              environment:
                  PIPENV_VENV_IN_PROJECT: true
        # steps that comprise the `build` job
        steps:
            # check out source code to working directory
            - checkout
            - run: sudo chown -R circleci:circleci /usr/local/bin
            - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "Pipfile.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-
            - run:
                  name: Install dependencies
                  command: |
                      sudo pip install pipenv
                      pipenv install --dev
            - save_cache:
                  paths:
                      - ./venv
                      - "/usr/local/bin"
                      - "/usr/local/lib/python3.6/site-packages"
                  key: v1-dependencies-{{ checksum "Pipfile.lock" }}
            - run:
                  name: Testing with flake8
                  command: |
                      mkdir test-reports
                      pipenv run flake8 ./ --output-file test-reports/flake8
            - run:
                  name: Testing with black
                  command: |
                      black --check ./
            - store_artifacts:
                  path: test-reports
                  destination: flake8-result

    unitTest:
        # directory where steps are run
        working_directory: ~/cc-link-checker
        # run the steps with Docker
        docker:
            # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
            - image: circleci/python:3.6.4
              environment:
                  PIPENV_VENV_IN_PROJECT: true
        # steps that comprise the `build` job
        steps:
            # check out source code to working directory
            - checkout
            - run: sudo chown -R circleci:circleci /usr/local/bin
            - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "Pipfile.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-
            - run:
                  name: Install dependencies
                  command: |
                      sudo pip install pipenv
                      pipenv install --dev
            - save_cache:
                  paths:
                      - ./venv
                      - "/usr/local/bin"
                      - "/usr/local/lib/python3.6/site-packages"
                  key: v1-dependencies-{{ checksum "Pipfile.lock" }}
            - run:
                  name: Running unit tests
                  command: |
                      mkdir test-reports
                      pipenv run pytest -v --junitxml=test-reports/junit.xml
            - store_test_results:
                  path: test-reports
    deedTest:
        # directory where steps are run
        working_directory: ~/cc-link-checker
        # run the steps with Docker
        docker:
            # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
            - image: circleci/python:3.6.4
              environment:
                  PIPENV_VENV_IN_PROJECT: true
        # steps that comprise the `build` job
        steps:
            # check out source code to working directory
            - checkout
            - run: sudo chown -R circleci:circleci /usr/local/bin
            - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "Pipfile.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-
            - run:
                  name: Install dependencies
                  command: |
                      sudo pip install pipenv
                      pipenv install --dev
            - save_cache:
                  paths:
                      - ./venv
                      - "/usr/local/bin"
                      - "/usr/local/lib/python3.6/site-packages"
                  key: v1-dependencies-{{ checksum "Pipfile.lock" }}
            - run:
                  name: Test broken links
                  command: |
                      mkdir test-reports
                      pipenv run python ./link_checker.py --output-error test-reports/errorlog.txt
            - store_artifacts:
                  # Uploading output errorlog.txt file as test artifact
                  path: test-reports
                  destination: links-result
            - store_test_results:
                  # Archiving the output junit-xml type test results
                  path: test-summary
workflows:
    version: 2
    workflow:
        jobs:
            - deedTest
